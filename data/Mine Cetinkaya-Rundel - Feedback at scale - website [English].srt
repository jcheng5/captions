1
00:00:06,122 --> 00:00:07,330
MINE CETINKAYA-RUNDEL: Hello.

2
00:00:07,330 --> 00:00:08,608
I'm Mine Cetinkaya-Rundel.

3
00:00:08,608 --> 00:00:10,150
I'm a Data Scientist
and Professional

4
00:00:10,150 --> 00:00:12,310
Educator at RStudio
as well as faculty

5
00:00:12,310 --> 00:00:14,920
at the University of
Edinburgh and Duke University.

6
00:00:14,920 --> 00:00:17,500
If you're also an educator
teaching data science,

7
00:00:17,500 --> 00:00:19,760
you might find yourself
in the following scenario,

8
00:00:19,760 --> 00:00:21,400
particularly this year.

9
00:00:21,400 --> 00:00:23,920
Your department chair says,
your data science course

10
00:00:23,920 --> 00:00:25,360
is going spectacularly.

11
00:00:25,360 --> 00:00:26,770
We'd love to expand it.

12
00:00:26,770 --> 00:00:29,970
And you say a big, yay.

13
00:00:29,970 --> 00:00:32,009
But then they say,
oh, and you're

14
00:00:32,009 --> 00:00:33,900
going to need to
do it all online.

15
00:00:33,900 --> 00:00:37,960
And you say, yay?

16
00:00:37,960 --> 00:00:40,030
And they follow up
with, and we can't

17
00:00:40,030 --> 00:00:41,800
provide any additional support.

18
00:00:41,800 --> 00:00:44,680
You get the same number
of TAs as before.

19
00:00:44,680 --> 00:00:46,670
And you start
thinking to yourself,

20
00:00:46,670 --> 00:00:50,430
am I supposed to say, yay?

21
00:00:50,430 --> 00:00:52,320
As enrollments and
statistics in data

22
00:00:52,320 --> 00:00:54,480
science courses grow,
and as these courses

23
00:00:54,480 --> 00:00:56,580
become more and
more computational,

24
00:00:56,580 --> 00:00:59,340
educators are faced with
an interesting challenge--

25
00:00:59,340 --> 00:01:02,580
providing timely and meaningful
feedback, particularly

26
00:01:02,580 --> 00:01:04,950
with online delivery of courses.

27
00:01:04,950 --> 00:01:08,110
I'm sure we all agree that
feedback should be meaningful.

28
00:01:08,110 --> 00:01:10,500
But traditionally,
meaningful, helpful,

29
00:01:10,500 --> 00:01:14,100
constructive feedback requires
human effort and can take

30
00:01:14,100 --> 00:01:16,990
a significant amount of
time for large courses,

31
00:01:16,990 --> 00:01:19,650
especially if they're
under-resourced, which--

32
00:01:19,650 --> 00:01:21,630
let's face it-- they tend to be.

33
00:01:21,630 --> 00:01:25,290
Timeliness of feedback is just
as important as meaningfulness.

34
00:01:25,290 --> 00:01:28,710
The longer time passes
between when a student turns

35
00:01:28,710 --> 00:01:32,250
in an assignment and when they
get feedback on it, the lower

36
00:01:32,250 --> 00:01:34,530
the utility of that feedback.

37
00:01:34,530 --> 00:01:37,110
For certain assignments,
like an open-ended project,

38
00:01:37,110 --> 00:01:40,050
this trade-off is
absolutely reasonable

39
00:01:40,050 --> 00:01:42,850
because it's really
difficult, if not impossible,

40
00:01:42,850 --> 00:01:45,840
to replace human feedback
with something else in such

41
00:01:45,840 --> 00:01:46,590
an assignment.

42
00:01:46,590 --> 00:01:49,750
But for others, there
are alternatives.

43
00:01:49,750 --> 00:01:51,760
One such option is
a learnr tutorial.

44
00:01:51,760 --> 00:01:53,650
And if you have ever
used learnr before,

45
00:01:53,650 --> 00:01:56,650
the tutorial probably looked a
little bit different than this.

46
00:01:56,650 --> 00:01:59,230
And that is just to say,
that with a little bit of CSS

47
00:01:59,230 --> 00:02:01,330
and theming, you can make
your learnr tutorials

48
00:02:01,330 --> 00:02:03,020
look like whatever you like.

49
00:02:03,020 --> 00:02:04,750
I like starting my
learnr tutorials

50
00:02:04,750 --> 00:02:07,720
with a bit of narrative, usually
a little bit longer than this,

51
00:02:07,720 --> 00:02:09,729
about the data and
the analysis we're

52
00:02:09,729 --> 00:02:11,560
going to work
through and introduce

53
00:02:11,560 --> 00:02:13,060
the students to the packages.

54
00:02:13,060 --> 00:02:15,700
And I like using the
progressive reveal option,

55
00:02:15,700 --> 00:02:18,770
so they have to deliberately
click through the material.

56
00:02:18,770 --> 00:02:21,610
I also like providing
some ready-to-run code

57
00:02:21,610 --> 00:02:22,570
at the beginning.

58
00:02:22,570 --> 00:02:25,060
So they don't need to
start working on exercises

59
00:02:25,060 --> 00:02:26,680
right away, but they
do need to start

60
00:02:26,680 --> 00:02:28,490
interacting with the document.

61
00:02:28,490 --> 00:02:31,300
Here, they're working on a
data set on Airbnb listings

62
00:02:31,300 --> 00:02:31,960
in Edinburgh.

63
00:02:31,960 --> 00:02:34,000
And the first thing
we're asking them to do

64
00:02:34,000 --> 00:02:36,040
is to take a look at
the variable names.

65
00:02:36,040 --> 00:02:38,890
It is not necessarily
meaningful interactivity.

66
00:02:38,890 --> 00:02:41,230
But maybe it introduces
them a little bit

67
00:02:41,230 --> 00:02:43,900
to the structure of
a learnr tutorial,

68
00:02:43,900 --> 00:02:46,360
and how to interact
with it, and potentially

69
00:02:46,360 --> 00:02:48,820
also helps build a little
bit of anticipation

70
00:02:48,820 --> 00:02:51,700
around what the result is going
to look like when they hit

71
00:02:51,700 --> 00:02:53,950
Run Code, as opposed
to providing them

72
00:02:53,950 --> 00:02:56,830
with a static document where
the code output is already

73
00:02:56,830 --> 00:02:58,360
provided.

74
00:02:58,360 --> 00:03:00,700
But really, where, a
learnr tutorial shines

75
00:03:00,700 --> 00:03:04,630
are these coding exercises,
where the students can try out

76
00:03:04,630 --> 00:03:07,240
some code, submit their
answer, and you can provide

77
00:03:07,240 --> 00:03:09,050
custom feedback to them.

78
00:03:09,050 --> 00:03:12,340
So the first exercise here
says, how many Airbnb listings

79
00:03:12,340 --> 00:03:14,330
are included in this data set?

80
00:03:14,330 --> 00:03:16,450
Let's imagine, the
student decided

81
00:03:16,450 --> 00:03:18,520
to look at the number
of columns as opposed

82
00:03:18,520 --> 00:03:20,170
to the number of rows.

83
00:03:20,170 --> 00:03:22,330
The feedback that
they're going to get

84
00:03:22,330 --> 00:03:24,160
sounds just like
the type of thing

85
00:03:24,160 --> 00:03:26,080
I would say to them
if I was working

86
00:03:26,080 --> 00:03:28,797
through the exercises with
them and trying to nudge them

87
00:03:28,797 --> 00:03:29,755
in the right direction.

88
00:03:29,755 --> 00:03:32,350
It says, did you calculate
the number of columns

89
00:03:32,350 --> 00:03:34,000
instead of number of rows?

90
00:03:34,000 --> 00:03:38,350
So you can write these
very precise feedback

91
00:03:38,350 --> 00:03:41,620
based on your anticipation
about the types of mistakes

92
00:03:41,620 --> 00:03:42,950
students can make.

93
00:03:42,950 --> 00:03:45,190
And obviously, it's not
possible to anticipate

94
00:03:45,190 --> 00:03:46,540
all possible mistakes.

95
00:03:46,540 --> 00:03:50,470
So what if a student chooses to
try out some code that I didn't

96
00:03:50,470 --> 00:03:52,390
anticipate they might try out?

97
00:03:52,390 --> 00:03:55,240
For that, I like providing
some canned feedback that's

98
00:03:55,240 --> 00:03:57,670
still constructive
and still nudges them

99
00:03:57,670 --> 00:03:59,560
in the right direction--
says something

100
00:03:59,560 --> 00:04:02,260
like, each observation is
represented in one row.

101
00:04:02,260 --> 00:04:04,780
Can you remember which
function we use to calculate

102
00:04:04,780 --> 00:04:07,060
the number of rows?

103
00:04:07,060 --> 00:04:09,520
And finally, let's get
this question correct.

104
00:04:09,520 --> 00:04:12,670
I'm going to use the
nrow function to do that.

105
00:04:12,670 --> 00:04:15,280
Let's run our code
and submit our answer.

106
00:04:15,280 --> 00:04:17,920
You'll see that we got the
green banner, which is great.

107
00:04:17,920 --> 00:04:19,990
But it doesn't just
say, correct, well done.

108
00:04:19,990 --> 00:04:21,550
It says a little bit more.

109
00:04:21,550 --> 00:04:25,600
So I like using the
space for the message

110
00:04:25,600 --> 00:04:28,420
for the correct
answers to give them

111
00:04:28,420 --> 00:04:32,270
a little bit more information
about what's to come next.

112
00:04:32,270 --> 00:04:38,200
So I also like following
on my coding exercises

113
00:04:38,200 --> 00:04:42,520
with some multiple-choice
exercises, something

114
00:04:42,520 --> 00:04:45,910
that allows the students to take
the code output that they saw

115
00:04:45,910 --> 00:04:49,090
and put it in the context of the
data set that they're working

116
00:04:49,090 --> 00:04:52,180
with, which is so important for
teaching statistics and data

117
00:04:52,180 --> 00:04:53,150
science.

118
00:04:53,150 --> 00:04:56,450
So what does each row in the
edibnb data set represent?

119
00:04:56,450 --> 00:04:58,480
That's an individual
Airbnb listing.

120
00:04:58,480 --> 00:05:00,790
And again, we can
use the feedback

121
00:05:00,790 --> 00:05:03,160
to give them a little bit
more information or something

122
00:05:03,160 --> 00:05:05,050
to think about.

123
00:05:05,050 --> 00:05:07,990
If you would like to see
the code for this learnr

124
00:05:07,990 --> 00:05:12,010
tutorial, both, in terms of
creating the exercises and also

125
00:05:12,010 --> 00:05:15,280
the theme and the look, you can
test drive it on RStudio Cloud,

126
00:05:15,280 --> 00:05:16,863
or you can view
the code on GitHub.

127
00:05:16,863 --> 00:05:18,280
And I'll be providing
links to all

128
00:05:18,280 --> 00:05:20,350
of this at the end of the talk.

129
00:05:20,350 --> 00:05:22,630
For now, I'd like to talk
a little bit about writing

130
00:05:22,630 --> 00:05:24,290
effective exercises.

131
00:05:24,290 --> 00:05:26,590
So let's start with
an exercise in mind.

132
00:05:26,590 --> 00:05:28,420
The three most
expensive neighborhoods,

133
00:05:28,420 --> 00:05:31,330
in terms of mean nightly
price are New Town, Old Town,

134
00:05:31,330 --> 00:05:32,260
and West End.

135
00:05:32,260 --> 00:05:35,260
Calculate the median number of
reviews in these neighborhoods

136
00:05:35,260 --> 00:05:38,290
and arrange them in
descending order.

137
00:05:38,290 --> 00:05:42,460
One option would be to provide
no scaffolding, whatsoever-- so

138
00:05:42,460 --> 00:05:45,970
an entirely empty canvas
for students to work with.

139
00:05:45,970 --> 00:05:49,150
And the thing about this is
we've really not given them

140
00:05:49,150 --> 00:05:51,490
any direction, in terms
of how to get started.

141
00:05:51,490 --> 00:05:54,430
And instead, what we've given
them is this giant button that

142
00:05:54,430 --> 00:05:56,350
says, Solution, and
it's so tempting

143
00:05:56,350 --> 00:05:59,410
to simply go, all right, let
me take a look at the solution,

144
00:05:59,410 --> 00:06:03,220
copy it to my clipboard,
paste it, run my code,

145
00:06:03,220 --> 00:06:05,950
and submit my answer,
and lovely job.

146
00:06:05,950 --> 00:06:06,790
I got it right.

147
00:06:06,790 --> 00:06:09,190
But did I learn anything
from this experience?

148
00:06:09,190 --> 00:06:10,240
Not really.

149
00:06:10,240 --> 00:06:12,460
This is not to say your
students are all going

150
00:06:12,460 --> 00:06:14,260
to peek into the solution code.

151
00:06:14,260 --> 00:06:16,660
But I think one
thing to keep in mind

152
00:06:16,660 --> 00:06:19,510
about providing no
scaffolding whatsoever

153
00:06:19,510 --> 00:06:22,480
is that I think there are
better venues for giving

154
00:06:22,480 --> 00:06:23,960
such exercises.

155
00:06:23,960 --> 00:06:25,930
So for assignments where
the students already

156
00:06:25,930 --> 00:06:29,530
have to work in the RStudio
IDE, either in an R Markdown

157
00:06:29,530 --> 00:06:31,690
document or in an
R script, I think

158
00:06:31,690 --> 00:06:35,380
is a better venue for a more
open-ended question where

159
00:06:35,380 --> 00:06:38,530
you provide no
scaffolding, whatsoever.

160
00:06:38,530 --> 00:06:40,600
Here, we've given
them no scaffolding.

161
00:06:40,600 --> 00:06:42,790
And we've also done
something else,

162
00:06:42,790 --> 00:06:48,250
where we basically are doing
this strict code-checking

163
00:06:48,250 --> 00:06:48,890
business.

164
00:06:48,890 --> 00:06:52,960
So let's say that your student,
with no scaffolding provided

165
00:06:52,960 --> 00:06:57,530
to them, actually decided to
move the filter over here.

166
00:06:57,530 --> 00:07:01,040
They group by and summarize
first, and then they filter.

167
00:07:01,040 --> 00:07:02,740
And if they run
their code, they're

168
00:07:02,740 --> 00:07:05,140
going to get the
exact same response.

169
00:07:05,140 --> 00:07:08,020
But their code is not
marked as correct.

170
00:07:08,020 --> 00:07:11,080
Because with the
grade_this_code() function,

171
00:07:11,080 --> 00:07:14,290
what is happening under the
hood is that the gradethis

172
00:07:14,290 --> 00:07:17,380
package is checking the
code your student wrote

173
00:07:17,380 --> 00:07:19,870
and the solution code
you provided and looks

174
00:07:19,870 --> 00:07:21,530
for a one-to-one match.

175
00:07:21,530 --> 00:07:24,910
So it says that I expected
you to call summarize

176
00:07:24,910 --> 00:07:26,110
where you called filter.

177
00:07:26,110 --> 00:07:28,100
Give it another try.

178
00:07:28,100 --> 00:07:28,840
Sure.

179
00:07:28,840 --> 00:07:31,270
You might say that, no,
this is exactly how I

180
00:07:31,270 --> 00:07:33,070
want my students to do things.

181
00:07:33,070 --> 00:07:35,290
But I think that's not
really entirely fair,

182
00:07:35,290 --> 00:07:38,750
especially because they
actually got the right answer.

183
00:07:38,750 --> 00:07:43,120
So the strict code checking
with no scaffolding whatsoever

184
00:07:43,120 --> 00:07:47,020
can lead to situations where
students get the right answer

185
00:07:47,020 --> 00:07:51,340
but are not necessarily
marked correct, if you will.

186
00:07:51,340 --> 00:07:53,110
Another option
would be to provide

187
00:07:53,110 --> 00:07:55,210
a little bit of scaffolding.

188
00:07:55,210 --> 00:07:57,490
But here, we're still
doing this strict check.

189
00:07:57,490 --> 00:08:00,430
So here, we've given them
a really nice structure

190
00:08:00,430 --> 00:08:02,290
for how to write their code.

191
00:08:02,290 --> 00:08:05,510
And obviously, we've made the
exercise a lot easier for them.

192
00:08:05,510 --> 00:08:09,160
But that might be OK if this
is one of the first few times

193
00:08:09,160 --> 00:08:11,880
they're seeing these
multi-line dplyr chains.

194
00:08:11,880 --> 00:08:15,640
So these learnr tutorials
are a great place

195
00:08:15,640 --> 00:08:18,370
to provide additional
opportunities

196
00:08:18,370 --> 00:08:23,290
for drill-type exercises
students can work through

197
00:08:23,290 --> 00:08:25,570
at the beginning
when they are first

198
00:08:25,570 --> 00:08:27,760
introduced to a new topic.

199
00:08:27,760 --> 00:08:30,530
And you can also
provide hints for them.

200
00:08:30,530 --> 00:08:32,275
So with these hints--

201
00:08:32,275 --> 00:08:33,400
let's take a look at that--

202
00:08:33,400 --> 00:08:36,280
I like writing them in
a progressive way, where

203
00:08:36,280 --> 00:08:39,640
they can scroll through and get
a chance to potentially think

204
00:08:39,640 --> 00:08:44,530
about what their answer should
look like at each stage.

205
00:08:44,530 --> 00:08:46,150
And sure, they
could, at the end,

206
00:08:46,150 --> 00:08:47,800
see the solution if
you want them to,

207
00:08:47,800 --> 00:08:50,990
but at least it makes them
think along the way as well.

208
00:08:50,990 --> 00:08:54,430
So let's go ahead and run this
code and submit the answer.

209
00:08:54,430 --> 00:08:56,410
I think, in this
structure, there

210
00:08:56,410 --> 00:08:59,620
is no worry that they would
be putting their filter

211
00:08:59,620 --> 00:09:01,600
function later on
because we had already

212
00:09:01,600 --> 00:09:03,490
provided the scaffolding.

213
00:09:03,490 --> 00:09:06,070
However, since we're
doing a strict check

214
00:09:06,070 --> 00:09:08,380
what if the student,
in the last line,

215
00:09:08,380 --> 00:09:12,590
forgot to actually put
things in descending order.

216
00:09:12,590 --> 00:09:14,500
So let's go ahead
and run that code.

217
00:09:14,500 --> 00:09:17,450
And obviously, this is
not the correct answer.

218
00:09:17,450 --> 00:09:19,210
But the feedback
that we get tends

219
00:09:19,210 --> 00:09:22,360
to be not very informative
when we use the Grade This

220
00:09:22,360 --> 00:09:23,930
Code function here.

221
00:09:23,930 --> 00:09:25,900
So it's basically
saying, I expected

222
00:09:25,900 --> 00:09:30,160
you to call desc for descending
where you wrote median writing.

223
00:09:30,160 --> 00:09:34,600
And in fact, here on line five,
that statement is correct.

224
00:09:34,600 --> 00:09:36,400
But does it actually
sound like the type

225
00:09:36,400 --> 00:09:38,230
of thing you would
say to your student

226
00:09:38,230 --> 00:09:40,090
if you were standing
right behind them

227
00:09:40,090 --> 00:09:42,460
and trying to nudge them
in the right direction?

228
00:09:42,460 --> 00:09:43,180
Not really.

229
00:09:43,180 --> 00:09:46,150
It doesn't seem like very
human-friendly feedback.

230
00:09:46,150 --> 00:09:48,040
So my recommendation,
overall, would

231
00:09:48,040 --> 00:09:50,920
be to provide some
scaffolding and also provide

232
00:09:50,920 --> 00:09:52,330
some flexibility.

233
00:09:52,330 --> 00:09:54,730
This is another
approach to scaffolding,

234
00:09:54,730 --> 00:09:58,810
where, perhaps, if this tutorial
is coming later on, if they've

235
00:09:58,810 --> 00:10:02,110
already done a bunch with dplyr,
and you don't want to give them

236
00:10:02,110 --> 00:10:04,660
that whole structure, you
might at least give them

237
00:10:04,660 --> 00:10:07,400
a little bit of
scaffolding to say, hey,

238
00:10:07,400 --> 00:10:09,850
I want you to use a dplyr
pipeline for answering

239
00:10:09,850 --> 00:10:11,560
this question.

240
00:10:11,560 --> 00:10:14,180
And let's go ahead
and give that a try.

241
00:10:14,180 --> 00:10:19,690
So here, I am going to forget to
put things in descending order

242
00:10:19,690 --> 00:10:21,130
and run my code.

243
00:10:21,130 --> 00:10:23,560
And let's take a look at
the feedback that I get.

244
00:10:23,560 --> 00:10:27,040
I actually am getting
human-friendly feedback here.

245
00:10:27,040 --> 00:10:29,440
"You've have successfully
calculated the median number

246
00:10:29,440 --> 00:10:31,990
of ratings, but did you
forget to arrange them

247
00:10:31,990 --> 00:10:33,570
in descending order?"

248
00:10:33,570 --> 00:10:35,350
How did I do this?

249
00:10:35,350 --> 00:10:37,480
Here, instead of
checking their code,

250
00:10:37,480 --> 00:10:40,690
we're actually checking their
result. And one nice thing

251
00:10:40,690 --> 00:10:42,340
about doing that is--

252
00:10:42,340 --> 00:10:45,680
so let's go back and put
the right answer here.

253
00:10:45,680 --> 00:10:48,490
What if they made that one
change, where they were doing

254
00:10:48,490 --> 00:10:52,270
Group By and Summarize
and then filter,

255
00:10:52,270 --> 00:10:54,910
let's have them run the code
and submit their answer.

256
00:10:54,910 --> 00:10:57,400
And in fact, this time,
it is marked as correct

257
00:10:57,400 --> 00:11:00,858
because, again, we're checking
the result and not the code.

258
00:11:00,858 --> 00:11:02,650
So what does this look
like under the hood?

259
00:11:02,650 --> 00:11:06,670
It's a bit more to
write the code checking

260
00:11:06,670 --> 00:11:10,330
if you're using the Grade This
function because you actually

261
00:11:10,330 --> 00:11:14,200
need to think about what are the
various answers they might get,

262
00:11:14,200 --> 00:11:18,500
and actually write some pass_if
or fail_if type statements.

263
00:11:18,500 --> 00:11:20,950
So here, I have one
pass_if statement that

264
00:11:20,950 --> 00:11:23,230
says if their result
is this tibble

265
00:11:23,230 --> 00:11:26,050
in this particular order,
we're going to say, yep,

266
00:11:26,050 --> 00:11:27,410
you did the right thing.

267
00:11:27,410 --> 00:11:31,270
But if they have put
them in ascending order,

268
00:11:31,270 --> 00:11:34,400
then we're going to give them
a specific message for that.

269
00:11:34,400 --> 00:11:36,320
Or if they have not
ordered them at all,

270
00:11:36,320 --> 00:11:39,040
in which case, the order will
be the alphabetical order

271
00:11:39,040 --> 00:11:41,710
of the neighborhood, we're going
to give them another message.

272
00:11:41,710 --> 00:11:44,470
And you can imagine stringing
along as many of these

273
00:11:44,470 --> 00:11:47,590
as you think are relevant for
the exercises you develop.

274
00:11:47,590 --> 00:11:50,640
And then, probably, you want
to write a catchall statement

275
00:11:50,640 --> 00:11:51,630
that's like, not quite.

276
00:11:51,630 --> 00:11:52,680
Take a peek at the hints.

277
00:11:52,680 --> 00:11:55,260
If the students are making
mistakes that you can't even

278
00:11:55,260 --> 00:11:58,020
anticipate when you
write the tests,

279
00:11:58,020 --> 00:12:01,350
you can leave the hints
to take care of that.

280
00:12:01,350 --> 00:12:04,260
And if you use these tutorials
over multiple semesters,

281
00:12:04,260 --> 00:12:07,260
or multiple workshops,
multiple learning or teaching

282
00:12:07,260 --> 00:12:09,180
engagements, you're
probably going

283
00:12:09,180 --> 00:12:11,490
to learn about the
various mistakes students

284
00:12:11,490 --> 00:12:13,680
make based on their questions.

285
00:12:13,680 --> 00:12:16,350
And then you might
iteratively build

286
00:12:16,350 --> 00:12:21,990
these tests to capture more
mistakes that they might make.

287
00:12:21,990 --> 00:12:24,650
So we've talked about
writing these exercises.

288
00:12:24,650 --> 00:12:26,630
What about collecting data?

289
00:12:26,630 --> 00:12:29,180
Learnr and gradethis
alone don't

290
00:12:29,180 --> 00:12:32,660
have some facility to allow you
to collect data from students.

291
00:12:32,660 --> 00:12:35,750
Specifically, the learnr
package makes this possible,

292
00:12:35,750 --> 00:12:39,530
but it doesn't itself offer
the functionality to do so.

293
00:12:39,530 --> 00:12:42,800
So for that, I use a different
package called learnrhash,

294
00:12:42,800 --> 00:12:46,170
which hashes the student
results and then allows you,

295
00:12:46,170 --> 00:12:48,230
as the instructor,
to decode them.

296
00:12:48,230 --> 00:12:50,660
So a setting where
I might use this

297
00:12:50,660 --> 00:12:53,930
is probably similar to
this, where I give them

298
00:12:53,930 --> 00:12:55,730
a coding exercise first.

299
00:12:55,730 --> 00:12:59,790
It says, make a
histogram of the prices.

300
00:12:59,790 --> 00:13:02,270
So let's go ahead
and actually do that.

301
00:13:02,270 --> 00:13:04,460
The data set is edibnb.

302
00:13:04,460 --> 00:13:06,680
The variable is price.

303
00:13:06,680 --> 00:13:09,800
We're going to have
them make a histogram.

304
00:13:12,740 --> 00:13:16,880
And here are the labels, x--

305
00:13:16,880 --> 00:13:25,940
whoops-- y, and title,
maybe something like this.

306
00:13:25,940 --> 00:13:28,370
They go ahead and
run their code.

307
00:13:28,370 --> 00:13:32,100
And they get some warnings
and submit their answer.

308
00:13:32,100 --> 00:13:33,335
It says, you got it right.

309
00:13:33,335 --> 00:13:35,210
And note that there are
a couple of warnings.

310
00:13:35,210 --> 00:13:36,627
We'll get to those
in a little bit

311
00:13:36,627 --> 00:13:39,600
because here, our focus
is a little bit different.

312
00:13:39,600 --> 00:13:43,920
So we follow this on with some
multiple-choice questions.

313
00:13:43,920 --> 00:13:47,310
Which of the following describes
the shape of the distribution?

314
00:13:47,310 --> 00:13:49,320
It's right skewed and unimodal.

315
00:13:49,320 --> 00:13:51,890
And let's go ahead and
pick another answer

316
00:13:51,890 --> 00:13:53,300
for the second question.

317
00:13:53,300 --> 00:13:55,170
This one happens
to be incorrect.

318
00:13:55,170 --> 00:13:56,540
OK?

319
00:13:56,540 --> 00:13:59,270
So when it comes time to
submitting their answers,

320
00:13:59,270 --> 00:14:01,700
with the learnrhash
package, students

321
00:14:01,700 --> 00:14:03,350
can generate a
hash, which is going

322
00:14:03,350 --> 00:14:05,900
to look very cryptic to them,
which is exactly what it's

323
00:14:05,900 --> 00:14:06,860
meant to do.

324
00:14:06,860 --> 00:14:09,050
They can select it and copy it.

325
00:14:09,050 --> 00:14:11,060
And then I like
embedding directly

326
00:14:11,060 --> 00:14:14,540
into the learnr tutorial
something like a Google form

327
00:14:14,540 --> 00:14:17,840
or another form your
institution might use,

328
00:14:17,840 --> 00:14:21,500
where the students can
submit their information.

329
00:14:21,500 --> 00:14:25,100
If you're using something that
directly your university uses,

330
00:14:25,100 --> 00:14:28,940
for example, this form could ask
them to authenticate for first

331
00:14:28,940 --> 00:14:32,480
if you want to make sure that
who is answering the questions

332
00:14:32,480 --> 00:14:34,340
is actually who you think it is.

333
00:14:34,340 --> 00:14:38,630
And you can ask them
to paste their hash

334
00:14:38,630 --> 00:14:40,880
that they generated here.

335
00:14:40,880 --> 00:14:43,490
And I also like using
this form to collect

336
00:14:43,490 --> 00:14:46,420
some free-form information
from the students as well.

337
00:14:46,420 --> 00:14:50,840
So a question phrased as, write
about one or two questions

338
00:14:50,840 --> 00:14:52,730
you didn't get right
initially but were

339
00:14:52,730 --> 00:14:54,830
able to solve after a few tries.

340
00:14:54,830 --> 00:14:56,300
What was difficult about them?

341
00:14:56,300 --> 00:14:57,860
What did you ultimately learn?

342
00:14:57,860 --> 00:15:01,220
And let the students write
some free-form answers

343
00:15:01,220 --> 00:15:03,140
and submit their results.

344
00:15:03,140 --> 00:15:05,990
On your end, what
you're going to see

345
00:15:05,990 --> 00:15:09,200
is this hash that the
students have submitted.

346
00:15:09,200 --> 00:15:12,530
And you'll be able to decode
that and be able to take a look

347
00:15:12,530 --> 00:15:14,870
at their multiple-choice
questions,

348
00:15:14,870 --> 00:15:18,590
and the answers they gave for
those, and the exercises--

349
00:15:18,590 --> 00:15:20,390
that's the coding exercises--

350
00:15:20,390 --> 00:15:22,880
and the answers they
gave for those as well.

351
00:15:22,880 --> 00:15:24,800
For some of the
feedback for grading,

352
00:15:24,800 --> 00:15:28,310
I usually tend to just mark
the multiple-choice questions,

353
00:15:28,310 --> 00:15:31,040
but you could choose to do both.

354
00:15:31,040 --> 00:15:34,020
These data are collected
in a Google spreadsheet,

355
00:15:34,020 --> 00:15:37,130
so you can view the
Google spreadsheet itself.

356
00:15:37,130 --> 00:15:40,610
I've pre-populated it with
some mock student data.

357
00:15:40,610 --> 00:15:43,980
And what you can do is, using
the googlesheets4 package,

358
00:15:43,980 --> 00:15:47,180
get that data and calculate
the student scores

359
00:15:47,180 --> 00:15:50,000
by matching their
answers to a key.

360
00:15:50,000 --> 00:15:52,550
And then also take a look
at the free-form answers.

361
00:15:52,550 --> 00:15:54,920
I like taking a look at
bigrams, for example,

362
00:15:54,920 --> 00:15:58,310
to see what are some concepts
that were mentioned many times

363
00:15:58,310 --> 00:16:00,680
as being difficult
for the students,

364
00:16:00,680 --> 00:16:04,070
so you might tailor your
next lesson accordingly.

365
00:16:04,070 --> 00:16:07,610
Lastly, let's talk about
distributing these at scale.

366
00:16:07,610 --> 00:16:09,920
One option, obviously,
is to deploy these

367
00:16:09,920 --> 00:16:13,610
to something like shinyapps.io
or another shiny server

368
00:16:13,610 --> 00:16:16,430
from the RStudio IDE with
push-button deploy just

369
00:16:16,430 --> 00:16:17,840
clicking on Publish.

370
00:16:17,840 --> 00:16:19,250
It works out of the box.

371
00:16:19,250 --> 00:16:20,120
It's great.

372
00:16:20,120 --> 00:16:22,160
But something you might
want to be careful about

373
00:16:22,160 --> 00:16:25,550
is that if you have a large
class and a strict deadline,

374
00:16:25,550 --> 00:16:27,560
many students
might try to access

375
00:16:27,560 --> 00:16:29,310
the tutorial at the same time.

376
00:16:29,310 --> 00:16:32,510
So you got to make sure that the
parameters for your deployment

377
00:16:32,510 --> 00:16:35,780
are set up properly in order
to be able to handle that.

378
00:16:35,780 --> 00:16:37,700
You might want to
give it more memory.

379
00:16:37,700 --> 00:16:40,910
You might want to
create more instances.

380
00:16:40,910 --> 00:16:43,550
And at some point, if you
have a really large course,

381
00:16:43,550 --> 00:16:46,790
and you expect students to be
doing things at the same time,

382
00:16:46,790 --> 00:16:49,280
you may need to think
about using one of the paid

383
00:16:49,280 --> 00:16:50,926
tiers of shinyapps.io.

384
00:16:50,926 --> 00:16:54,020
And that may or may not be
feasible for your setting.

385
00:16:54,020 --> 00:16:56,090
So another option is
to distribute them

386
00:16:56,090 --> 00:16:57,090
within a package.

387
00:16:57,090 --> 00:17:00,320
Here, I'm going to give an
example from the dsbox package,

388
00:17:00,320 --> 00:17:03,020
which accompanies the Data
Science Course in a Box

389
00:17:03,020 --> 00:17:03,860
curriculum.

390
00:17:03,860 --> 00:17:06,829
And yes, I am saying that
you can make an R package.

391
00:17:06,829 --> 00:17:08,450
And you might be
new to doing that,

392
00:17:08,450 --> 00:17:11,780
so you can use this as
a skeleton for doing so.

393
00:17:11,780 --> 00:17:15,800
But the nice thing is, really,
what you want to focus on

394
00:17:15,800 --> 00:17:19,339
is that the tutorials
go in the inst folder

395
00:17:19,339 --> 00:17:22,310
in a subfolder called
tutorials of the package.

396
00:17:22,310 --> 00:17:26,220
Inside that is a single folder
for each one of the tutorials.

397
00:17:26,220 --> 00:17:28,250
This package happens
to have eight of them.

398
00:17:28,250 --> 00:17:30,830
And inside that is
the R Markdown file,

399
00:17:30,830 --> 00:17:33,680
where you developed your
tutorial and any accompanying

400
00:17:33,680 --> 00:17:36,320
files that go along with it.

401
00:17:36,320 --> 00:17:39,950
Chances are, you may not want
to put this tutorial on CRAN.

402
00:17:39,950 --> 00:17:42,300
Maybe it's not for
wide distribution.

403
00:17:42,300 --> 00:17:44,780
But you can ask your students
to install it directly

404
00:17:44,780 --> 00:17:45,740
from GitHub.

405
00:17:45,740 --> 00:17:48,410
Or if you're using something
like RStudio Cloud,

406
00:17:48,410 --> 00:17:49,700
you can ask them to--

407
00:17:49,700 --> 00:17:51,710
you can pre-install it for them.

408
00:17:51,710 --> 00:17:53,990
And within the
RStudio IDE, they will

409
00:17:53,990 --> 00:17:58,220
be ready to be launched soon as
the students start that RStudio

410
00:17:58,220 --> 00:17:59,030
session.

411
00:17:59,030 --> 00:18:02,030
I usually tell my students
once you launch the tutorial,

412
00:18:02,030 --> 00:18:04,970
just make that tutorial
pane, maximize it,

413
00:18:04,970 --> 00:18:06,815
and it looks just like
they're interacting

414
00:18:06,815 --> 00:18:09,080
with it within the web browser.

415
00:18:09,080 --> 00:18:13,190
But now, you're not relying
on a service like shinyapps.io

416
00:18:13,190 --> 00:18:14,530
be hosting your tutorial.

417
00:18:14,530 --> 00:18:16,970
So it really doesn't
matter how many students

418
00:18:16,970 --> 00:18:20,550
are using it at the same time
as long as you're RStudio

419
00:18:20,550 --> 00:18:22,251
and allows that.

420
00:18:22,251 --> 00:18:25,070
The barrier to entry for
getting started with learnr

421
00:18:25,070 --> 00:18:27,920
is pretty low, especially if
you're already an R Markdown

422
00:18:27,920 --> 00:18:28,700
user.

423
00:18:28,700 --> 00:18:31,160
In fact, the tutorials
in the dsbox package

424
00:18:31,160 --> 00:18:33,560
were co-developed with
students with only one

425
00:18:33,560 --> 00:18:36,640
semester of introductory data
science under their belt.

426
00:18:36,640 --> 00:18:40,190
So when I say it has a low
entry point, I really mean it.

427
00:18:40,190 --> 00:18:42,470
We all know that students
get better at coding,

428
00:18:42,470 --> 00:18:45,140
or whatever they're
learning, with practice.

429
00:18:45,140 --> 00:18:48,860
We also probably mostly agree
that formative feedback that

430
00:18:48,860 --> 00:18:51,320
nudges learners in
the right direction

431
00:18:51,320 --> 00:18:54,050
while they're working on
the exercises as opposed

432
00:18:54,050 --> 00:18:57,350
to summative feedback that
comes weeks after they're done

433
00:18:57,350 --> 00:19:01,160
can have positive effects on
their learning and enjoyment.

434
00:19:01,160 --> 00:19:02,990
Plus, providing
individual feedback

435
00:19:02,990 --> 00:19:06,500
to students, especially for
exercises narrow in scope,

436
00:19:06,500 --> 00:19:10,550
can turn into dreadful
busywork for us educators.

437
00:19:10,550 --> 00:19:13,730
So while developing
meaningful automated feedback

438
00:19:13,730 --> 00:19:16,640
can be quite tedious
and time-consuming,

439
00:19:16,640 --> 00:19:20,150
I think that's a much more
intellectually engaging way

440
00:19:20,150 --> 00:19:22,310
to spend your time
as an instructor.

441
00:19:22,310 --> 00:19:25,340
It's also a great opportunity
to develop software engineering

442
00:19:25,340 --> 00:19:27,410
skills, like writing
robust tests,

443
00:19:27,410 --> 00:19:29,990
bringing together your
pedagogical and technical

444
00:19:29,990 --> 00:19:31,220
expertise.

445
00:19:31,220 --> 00:19:32,840
You can find materials
for this talk,

446
00:19:32,840 --> 00:19:35,600
including the source code for
the learnr tutorial we worked

447
00:19:35,600 --> 00:19:38,240
through and links to
resources to learn more

448
00:19:38,240 --> 00:19:43,130
at rstd.io/global2021/mcr.

449
00:19:43,130 --> 00:19:44,930
Thank you for watching.

450
00:19:44,930 --> 00:19:47,570
And remember that comment from
your chair about no more TA

451
00:19:47,570 --> 00:19:48,290
support?

452
00:19:48,290 --> 00:19:51,630
With what learnr, gradethis,
and learnrhash can offer,

453
00:19:51,630 --> 00:19:55,360
you might get closer to
responding, bring it on.
