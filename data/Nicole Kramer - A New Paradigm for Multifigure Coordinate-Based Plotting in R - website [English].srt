1
00:00:02,970 --> 00:00:05,940
[MUSIC PLAYING]

2
00:00:07,920 --> 00:00:08,730
NICOLE KRAMER: Hi.

3
00:00:08,730 --> 00:00:10,470
My name is Nicole
Kramer, and I'm

4
00:00:10,470 --> 00:00:14,130
a third-year bioinformatics and
computational biology graduate

5
00:00:14,130 --> 00:00:17,790
student at the University of
North Carolina at Chapel Hill.

6
00:00:17,790 --> 00:00:19,830
Today, I'm really
honored to be talking

7
00:00:19,830 --> 00:00:22,920
to you about a new
paradigm for multi figure

8
00:00:22,920 --> 00:00:25,260
coordinate-based
plotting in R that I've

9
00:00:25,260 --> 00:00:30,380
begun to make possible
with my package BentoBox

10
00:00:30,380 --> 00:00:33,710
The inspiration for this
package and this functionality

11
00:00:33,710 --> 00:00:35,750
within the R
plotting environment

12
00:00:35,750 --> 00:00:38,330
came from some of my own
stressful experiences

13
00:00:38,330 --> 00:00:41,630
as a grad student making
figures and plots.

14
00:00:41,630 --> 00:00:43,760
There was one time
when my advisor asked

15
00:00:43,760 --> 00:00:46,370
me to make a multi-paneled
figure that looked something

16
00:00:46,370 --> 00:00:48,920
like this.

17
00:00:48,920 --> 00:00:50,720
There were two heatmap style plots

18
00:00:50,720 --> 00:00:53,120
in a specific genomic region.

19
00:00:53,120 --> 00:00:56,300
There were two tracks
of genes below that.

20
00:00:56,300 --> 00:01:00,740
There were six different tracks
of bin signal data below those.

21
00:01:00,740 --> 00:01:03,860
And there was a bar graph
of some statistical analysis

22
00:01:03,860 --> 00:01:05,930
done in R.

23
00:01:05,930 --> 00:01:10,550
And since I work in genomics,
all of this data was huge.

24
00:01:10,550 --> 00:01:14,330
One heatmap came from a
file that was 55 gigabytes.

25
00:01:14,330 --> 00:01:17,960
And the other came from a
file that was 14 gigabytes.

26
00:01:17,960 --> 00:01:21,350
One set of those bin data came
from three different files that

27
00:01:21,350 --> 00:01:24,380
totaled 1.2 gigabytes,
and the other

28
00:01:24,380 --> 00:01:29,420
came from three other files
that totaled 1.7 gigabytes.

29
00:01:29,420 --> 00:01:31,970
And on top of this
data being huge,

30
00:01:31,970 --> 00:01:33,890
the process to make
this combined figure

31
00:01:33,890 --> 00:01:36,830
was extremely tedious
and time-consuming,

32
00:01:36,830 --> 00:01:40,550
with all of its elements
coming from different places.

33
00:01:40,550 --> 00:01:42,800
There were different
screenshots of a couple

34
00:01:42,800 --> 00:01:44,450
of genomic browsers.

35
00:01:44,450 --> 00:01:46,610
There was a plot made
from data analyzed

36
00:01:46,610 --> 00:01:50,900
in R. Everything was cropped and
arranged in Adobe Illustrator,

37
00:01:50,900 --> 00:01:53,180
and all of the fine
tuning and nice labels

38
00:01:53,180 --> 00:01:57,050
were also made in
Adobe Illustrator.

39
00:01:57,050 --> 00:02:00,860
So when my advisor asked me to
change the genomic coordinates

40
00:02:00,860 --> 00:02:04,850
I was looking at in this
figure, it wasn't a simple fix.

41
00:02:04,850 --> 00:02:07,820
And I went to my
overcrowded laptop screen

42
00:02:07,820 --> 00:02:11,720
with a bunch of genomic browsers
open, with my Dropbox open,

43
00:02:11,720 --> 00:02:16,430
with all the files I was working
at my RStudio window, my Adobe

44
00:02:16,430 --> 00:02:18,470
Illustrator window,
and the paper

45
00:02:18,470 --> 00:02:20,540
I was taking inspiration from.

46
00:02:20,540 --> 00:02:25,820
And I became
completely overwhelmed.

47
00:02:25,820 --> 00:02:28,970
I thought that there
had to be an easier way

48
00:02:28,970 --> 00:02:32,600
to make figures like this
beyond existing browsers,

49
00:02:32,600 --> 00:02:35,180
beyond existing
programmatic libraries,

50
00:02:35,180 --> 00:02:37,430
and things that I didn't
need to use graphic design

51
00:02:37,430 --> 00:02:40,190
software for that would
let me make and arrange

52
00:02:40,190 --> 00:02:42,620
all my plots in one place.

53
00:02:42,620 --> 00:02:46,520
Something that was entirely
reproducible by being

54
00:02:46,520 --> 00:02:49,940
completely programmatic,
yet entirely

55
00:02:49,940 --> 00:02:54,590
customizable and efficient
for handling large data

56
00:02:54,590 --> 00:02:57,150
specifically.

57
00:02:57,150 --> 00:03:01,280
And so my team and I developed
a package called BentoBox that

58
00:03:01,280 --> 00:03:03,890
allows for coordinate-based
plotting in R

59
00:03:03,890 --> 00:03:06,080
where plots can be
programmatically made

60
00:03:06,080 --> 00:03:08,750
and arranged on a
user-defined page layout

61
00:03:08,750 --> 00:03:10,880
with common units
of measurement.

62
00:03:10,880 --> 00:03:14,390
Here is an example I'm showing
you two tiny page markings

63
00:03:14,390 --> 00:03:18,770
with inches and centimeters.

64
00:03:18,770 --> 00:03:20,930
So let's talk about
how Bento Box makes

65
00:03:20,930 --> 00:03:24,230
figures entirely programmatic.

66
00:03:24,230 --> 00:03:27,440
If we go back to that figure I
made by combining screenshots

67
00:03:27,440 --> 00:03:30,830
in Adobe Illustrator, I can
now make a precisely tailored

68
00:03:30,830 --> 00:03:35,120
version of that figure entirely
in R. The code on the left

69
00:03:35,120 --> 00:03:38,600
is every command needed to
make the figure on the right.

70
00:03:38,600 --> 00:03:40,130
I've squished it
down for you here,

71
00:03:40,130 --> 00:03:43,010
and it's not important that you
look at the code I've written.

72
00:03:43,010 --> 00:03:46,340
But just know that if I gave you
this file and the data files,

73
00:03:46,340 --> 00:03:48,140
you could make the
exact same figure

74
00:03:48,140 --> 00:03:50,250
that I've made on the right.

75
00:03:50,250 --> 00:03:53,060
So here I can give my
advisor the file, the data,

76
00:03:53,060 --> 00:03:56,960
and they can make that
figure just as they want it.

77
00:03:56,960 --> 00:04:01,340
I can define all my files
and data and just one place.

78
00:04:01,340 --> 00:04:03,590
And here, with one
line of code, I

79
00:04:03,590 --> 00:04:05,270
can easily change
the coordinates

80
00:04:05,270 --> 00:04:07,910
that I'm looking at while
keeping the rest of the figure

81
00:04:07,910 --> 00:04:10,410
structure and
aesthetics the same.

82
00:04:10,410 --> 00:04:12,860
So if my advisor wants
to change the region,

83
00:04:12,860 --> 00:04:14,930
but have everything
else look the same,

84
00:04:14,930 --> 00:04:20,000
I now only have to do that
with one line of code.

85
00:04:20,000 --> 00:04:23,030
BentoBox also makes plots
entirely customizable,

86
00:04:23,030 --> 00:04:24,500
just as you could
for other plots

87
00:04:24,500 --> 00:04:28,700
in R. I now have the
power to really customize

88
00:04:28,700 --> 00:04:30,620
a bunch of things
about my plots.

89
00:04:30,620 --> 00:04:34,190
I can really easily change their
color palettes, font sizes,

90
00:04:34,190 --> 00:04:38,640
font types, dimensions,
et cetera, et cetera.

91
00:04:38,640 --> 00:04:42,020
So let's say my advisor didn't
like those heat maps being red,

92
00:04:42,020 --> 00:04:46,190
and he wanted those bin signal
tracks to be slightly taller.

93
00:04:46,190 --> 00:04:48,350
We can now easily make
both of our heat maps

94
00:04:48,350 --> 00:04:50,540
with a blue color
palette and quickly

95
00:04:50,540 --> 00:04:53,060
adjust the dimensions
of all those tracks, all

96
00:04:53,060 --> 00:04:55,190
while maintaining
picture clarity

97
00:04:55,190 --> 00:04:57,160
and not having to
squish any of our data.

98
00:04:59,930 --> 00:05:03,080
One of the really special
customizations in BentoBox

99
00:05:03,080 --> 00:05:05,840
is its ability to perform
coordinate-based plotting

100
00:05:05,840 --> 00:05:09,750
on a page with precise
placements and dimensions.

101
00:05:09,750 --> 00:05:11,660
So here we can
define a BentoBox

102
00:05:11,660 --> 00:05:15,710
page that is exactly 9 inches
wide and 5 inches tall.

103
00:05:15,710 --> 00:05:18,260
And now we can make and
arrange all of our plots

104
00:05:18,260 --> 00:05:21,360
within this defined landscape.

105
00:05:21,360 --> 00:05:23,000
So if we want the
top corner of a plot

106
00:05:23,000 --> 00:05:26,150
to be 2 inches down from the
top of the page and 1 inch

107
00:05:26,150 --> 00:05:30,650
from the left, and we want the
plot to be 3 inches wide and 1

108
00:05:30,650 --> 00:05:34,970
inch tall, we can exactly make
our plot with these parameters.

109
00:05:34,970 --> 00:05:37,970
And it'll fit right in
that box we defined.

110
00:05:37,970 --> 00:05:39,770
This exact sizing
and placement is

111
00:05:39,770 --> 00:05:41,540
particularly
important and useful

112
00:05:41,540 --> 00:05:45,360
for standardized and
accurate data comparisons.

113
00:05:45,360 --> 00:05:47,290
So this both applies
along the y-axis,

114
00:05:47,290 --> 00:05:49,040
if we're looking at
two plots side-by-side

115
00:05:49,040 --> 00:05:50,600
and they have the
same scale, we want

116
00:05:50,600 --> 00:05:54,500
to make sure we're comparing
that data correctly.

117
00:05:54,500 --> 00:05:56,510
And it's also important
for comparing data

118
00:05:56,510 --> 00:05:58,860
along the same
coordinates of the x-axis.

119
00:05:58,860 --> 00:06:00,470
So here in the case
of genomics, we're

120
00:06:00,470 --> 00:06:02,697
looking at a specific
region along the genome.

121
00:06:02,697 --> 00:06:04,280
And we want to compare
the data that's

122
00:06:04,280 --> 00:06:07,310
specifically in that region.

123
00:06:07,310 --> 00:06:10,010
And while there are other
tools, like patchwork and

124
00:06:10,010 --> 00:06:12,380
cowplot for arranging
plots in R, none

125
00:06:12,380 --> 00:06:14,570
are as precise and
specifically tailored

126
00:06:14,570 --> 00:06:17,540
for a multi-plot
environment like BentoBox.

127
00:06:17,540 --> 00:06:20,030
So here I've made
two example ggplots

128
00:06:20,030 --> 00:06:21,685
using the mtcars dataset.

129
00:06:21,685 --> 00:06:23,810
And I'm going to show you
how they work differently

130
00:06:23,810 --> 00:06:27,890
in patchwork, cowplot,
and BentoBox.

131
00:06:27,890 --> 00:06:30,740
Patchwork is specialized
for the easy arrangement

132
00:06:30,740 --> 00:06:31,940
of plots and grids.

133
00:06:31,940 --> 00:06:34,640
So here we can just
define plot 1 plus plot 2,

134
00:06:34,640 --> 00:06:38,300
and patchwork will place
them side-by-side for us.

135
00:06:38,300 --> 00:06:40,730
And cowplot expands
on these grid layouts

136
00:06:40,730 --> 00:06:42,410
and gives you
slight more control

137
00:06:42,410 --> 00:06:45,230
of the relative dimensions
and plot placements.

138
00:06:45,230 --> 00:06:47,840
So here I can define
that I want the left plot

139
00:06:47,840 --> 00:06:50,000
to be slightly smaller
and shifted to the left

140
00:06:50,000 --> 00:06:51,680
to the right--

141
00:06:51,680 --> 00:06:54,530
of the plot on the right.

142
00:06:54,530 --> 00:06:57,500
But these options both have
issues of placement and size

143
00:06:57,500 --> 00:07:00,470
accuracy, which can become
a problem, both in terms

144
00:07:00,470 --> 00:07:03,300
of aesthetics and
data interpretation.

145
00:07:03,300 --> 00:07:06,530
So as you can see here, the
relative placements and sizes

146
00:07:06,530 --> 00:07:08,390
of the plots mean
that they can easily

147
00:07:08,390 --> 00:07:10,490
get squished or
stretched, especially when

148
00:07:10,490 --> 00:07:13,010
we're moving around our
graphic device window,

149
00:07:13,010 --> 00:07:17,400
or if we're exporting
it in different sizes.

150
00:07:17,400 --> 00:07:19,580
This does not happen
with BentoBox plots,

151
00:07:19,580 --> 00:07:21,620
because everything
is aligned and spaced

152
00:07:21,620 --> 00:07:23,870
exactly how we want it to be.

153
00:07:23,870 --> 00:07:26,050
So, here, if we're
placing those same plots

154
00:07:26,050 --> 00:07:28,990
on a page that is defined
to be 8 inches wide and 4

155
00:07:28,990 --> 00:07:32,200
inches tall, we can see as
we move the R graphic device

156
00:07:32,200 --> 00:07:37,360
window around, it adjusts to
maintain those dimensions.

157
00:07:37,360 --> 00:07:39,370
And despite plotting
and customizing

158
00:07:39,370 --> 00:07:42,100
extremely large datasets,
BentoBox functions

159
00:07:42,100 --> 00:07:43,840
are extremely
efficient, because they

160
00:07:43,840 --> 00:07:48,275
were optimized to be able to
quickly plot large datasets.

161
00:07:48,275 --> 00:07:49,900
So if we go back to
our previous figure

162
00:07:49,900 --> 00:07:51,970
that we made with
BentoBox, we can

163
00:07:51,970 --> 00:07:53,710
see how quick it
is to generate each

164
00:07:53,710 --> 00:07:55,820
of the main elements
of our plot.

165
00:07:55,820 --> 00:07:59,560
So our two heat maps here
took only 0.6 seconds to plot.

166
00:07:59,560 --> 00:08:02,050
Our genomic labeling
and our gene tracks

167
00:08:02,050 --> 00:08:05,140
took 0.06 seconds to plot.

168
00:08:05,140 --> 00:08:09,490
Each of our signal tracks took
less than 1 second to plot.

169
00:08:12,250 --> 00:08:16,360
And adding our ggplot
took 0.4 seconds.

170
00:08:16,360 --> 00:08:19,600
In the end, it only took
my laptop about 3 seconds

171
00:08:19,600 --> 00:08:22,820
to generate this whole figure
coming from many large data

172
00:08:22,820 --> 00:08:23,320
files.

173
00:08:28,450 --> 00:08:31,120
And if our advisor wants
us to visually scan

174
00:08:31,120 --> 00:08:33,669
through our large
datasets, we can now

175
00:08:33,669 --> 00:08:35,470
programmatically
and easily make them

176
00:08:35,470 --> 00:08:38,289
aesthetic informative
figures in bulk.

177
00:08:38,289 --> 00:08:43,720
So here I've made 20 files
of the same style of figure,

178
00:08:43,720 --> 00:08:46,810
but looking through
different regions of a file.

179
00:08:46,810 --> 00:08:49,450
And they're all plotted in
the exact way I want them,

180
00:08:49,450 --> 00:08:51,610
and I can easily scan
through all of this data.

181
00:08:54,387 --> 00:08:56,470
So now that we've gone
through some of BentoBox's

182
00:08:56,470 --> 00:09:00,490
key features, I want to take you
through a walkthrough of a plot

183
00:09:00,490 --> 00:09:04,390
that we made with
some genomic data.

184
00:09:04,390 --> 00:09:07,450
So, first, we can initialize
our BentoBox page

185
00:09:07,450 --> 00:09:10,750
with the exact dimensions
in our unit of choice.

186
00:09:10,750 --> 00:09:14,080
As an American, I have
chosen inches here.

187
00:09:14,080 --> 00:09:16,990
This function will by
default add ticks and guides

188
00:09:16,990 --> 00:09:19,552
to add you in your
figure-building process

189
00:09:19,552 --> 00:09:21,760
to make sure you're placing
things and arranging them

190
00:09:21,760 --> 00:09:24,550
in the way you want.

191
00:09:24,550 --> 00:09:27,280
So, first, here we can
add 1/2 of a heat map

192
00:09:27,280 --> 00:09:31,630
from a file and its associated
color scale at one corner.

193
00:09:31,630 --> 00:09:34,060
We can add the bottom
half of this heat map

194
00:09:34,060 --> 00:09:36,280
from a different file
in a different color

195
00:09:36,280 --> 00:09:39,850
palette with its
associated color scale.

196
00:09:39,850 --> 00:09:42,760
We can replace those two heat
maps with one square heat

197
00:09:42,760 --> 00:09:46,690
map that's exactly 3 inches
wide and 3 inches tall

198
00:09:46,690 --> 00:09:50,720
and easily change
its color palette.

199
00:09:50,720 --> 00:09:53,230
We can mark up the dark
pixels on that heat map

200
00:09:53,230 --> 00:09:56,890
that in the genomic field
we denote as DNA loops.

201
00:09:56,890 --> 00:09:59,510
And we can do this with
a variety of options.

202
00:09:59,510 --> 00:10:04,690
So here we can do this with
circles, or with arrows,

203
00:10:04,690 --> 00:10:06,200
or with squares.

204
00:10:06,200 --> 00:10:08,890
And in this case, we can just
highlight one specific loop

205
00:10:08,890 --> 00:10:11,170
region and annotate
that with text,

206
00:10:11,170 --> 00:10:14,560
if that's what we
want to look at.

207
00:10:14,560 --> 00:10:18,250
We can next line up and add
a different representation

208
00:10:18,250 --> 00:10:21,160
for these loop regions
as two boxes connected

209
00:10:21,160 --> 00:10:22,900
by line segments.

210
00:10:22,900 --> 00:10:25,930
And this track is exactly the
same width as our heat map

211
00:10:25,930 --> 00:10:28,730
and in the height
that we want it to be.

212
00:10:28,730 --> 00:10:31,840
Or we can change this data
into a different representation

213
00:10:31,840 --> 00:10:35,890
by marking them up
as connected arches.

214
00:10:35,890 --> 00:10:37,900
Below this, and
lined up to our heatmap

215
00:10:37,900 --> 00:10:40,030
and these arch
representations,

216
00:10:40,030 --> 00:10:41,860
we can now add
different bin signal

217
00:10:41,860 --> 00:10:45,640
tracks from different files
and in different colors.

218
00:10:45,640 --> 00:10:48,880
For each of these, we can change
the y ranges and the heights

219
00:10:48,880 --> 00:10:50,170
of all these different plots.

220
00:10:55,570 --> 00:10:57,370
We can then line up
the track of genes

221
00:10:57,370 --> 00:11:00,440
that fall in this exact region
of data that we're looking at.

222
00:11:00,440 --> 00:11:02,590
So we can show both
strands of the DNA,

223
00:11:02,590 --> 00:11:06,970
show the structure of the
genes, and label them.

224
00:11:06,970 --> 00:11:10,000
We can easily change the colors
of every element of this gene

225
00:11:10,000 --> 00:11:14,800
track and make it all gray
or all a different color.

226
00:11:14,800 --> 00:11:16,870
Or we can just highlight
a specific gene

227
00:11:16,870 --> 00:11:19,810
in a color of our choosing.

228
00:11:19,810 --> 00:11:22,600
And finally below this
entire collection of data,

229
00:11:22,600 --> 00:11:25,030
we can label the x-axis
of genomic coordinates

230
00:11:25,030 --> 00:11:28,450
that we're looking at and
really line it up to everything

231
00:11:28,450 --> 00:11:30,830
we've built up so far.

232
00:11:30,830 --> 00:11:32,350
But beyond looking
at these lined up

233
00:11:32,350 --> 00:11:35,050
tracks of different data
that you might already

234
00:11:35,050 --> 00:11:38,860
see in a genomic browser, we can
also add various plot elements

235
00:11:38,860 --> 00:11:41,350
to our page in different
locations, sizes,

236
00:11:41,350 --> 00:11:45,110
and orientations really
with no limitations.

237
00:11:45,110 --> 00:11:47,050
So, first, on this
right side we can now

238
00:11:47,050 --> 00:11:50,050
add a picture representation of
a chromosome and the specified

239
00:11:50,050 --> 00:11:51,940
width.

240
00:11:51,940 --> 00:11:55,420
Below that, we can zoom in and
highlight a specific region

241
00:11:55,420 --> 00:11:57,580
of the chromosome and
add two different heat

242
00:11:57,580 --> 00:12:00,310
maps of the same size and
region right next to each other

243
00:12:00,310 --> 00:12:02,410
to compare those two
different data types.

244
00:12:05,150 --> 00:12:08,210
We can change those square
heatmaps into triangle ones,

245
00:12:08,210 --> 00:12:11,090
if that suits our fancy.

246
00:12:11,090 --> 00:12:14,780
We can add two more bin signal
tracks below our other heatmaps,

247
00:12:14,780 --> 00:12:17,690
this time making them the
same width as our smaller heatmap

248
00:12:17,690 --> 00:12:21,470
since we're
comparing along that axis.

249
00:12:21,470 --> 00:12:24,200
We can zoom in on a specific
region of that bin data

250
00:12:24,200 --> 00:12:27,960
to compare a specific
peak of data.

251
00:12:27,960 --> 00:12:30,680
And we can also add the
sequencing read pile-ups that

252
00:12:30,680 --> 00:12:32,690
represent that bin signal data.

253
00:12:32,690 --> 00:12:37,730
And we can change the color for
each of the two strands of DNA.

254
00:12:37,730 --> 00:12:40,940
And, finally, again, we can add
our label genomic coordinates

255
00:12:40,940 --> 00:12:44,940
below each of these
zoomed regions of data.

256
00:12:44,940 --> 00:12:47,180
And when we're done building
up and tweaking our plot

257
00:12:47,180 --> 00:12:50,630
to our liking, we can remove all
of those guides from our page

258
00:12:50,630 --> 00:12:53,150
and export our
publication quality figure

259
00:12:53,150 --> 00:12:55,460
in the size we made
it at the beginning.

260
00:12:55,460 --> 00:12:57,500
So we can use it
in research papers,

261
00:12:57,500 --> 00:13:00,180
or presentations
just like this one.

262
00:13:00,180 --> 00:13:06,020
So this entire plot is exactly
what I built up in BentoBox.

263
00:13:06,020 --> 00:13:08,930
And so if we compare
BentoBox to existing

264
00:13:08,930 --> 00:13:11,210
programmatic
libraries, we can see

265
00:13:11,210 --> 00:13:15,170
that both are programmatic
and reproducible.

266
00:13:15,170 --> 00:13:17,690
Both are fully customizable.

267
00:13:17,690 --> 00:13:21,120
And both integrate a wide
variety of data types.

268
00:13:21,120 --> 00:13:24,410
However, BentoBox is
specialized to handle

269
00:13:24,410 --> 00:13:26,960
large datasets
like genomic data.

270
00:13:26,960 --> 00:13:30,200
And only Bento Box gives
users the precise control

271
00:13:30,200 --> 00:13:33,750
of plot placements
and dimensions.

272
00:13:33,750 --> 00:13:34,250
BentoBox

273
00:13:34,250 --> 00:13:37,250
currently has
functions for genomic data,

274
00:13:37,250 --> 00:13:40,280
but I hope its paradigms will
extend our plotting environment

275
00:13:40,280 --> 00:13:43,100
for all kinds of
data visualizations.

276
00:13:43,100 --> 00:13:45,500
If you're interested
in trying out BentoBox

277
00:13:45,500 --> 00:13:48,120
and exploring how you can
use it with your data,

278
00:13:48,120 --> 00:13:50,450
you can get BentoBox
from my lab's GitHub page,

279
00:13:50,450 --> 00:13:52,597
or feel free to
tweet at me directly.

280
00:13:52,597 --> 00:13:53,930
Thank you so much for your time.

281
00:14:02,030 --> 00:14:05,080
[MUSIC PLAYING]
