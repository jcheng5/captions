1
00:00:09,040 --> 00:00:11,950
RIKA GORN: Hi, my name is
Rika Gorn, and thank you

2
00:00:11,950 --> 00:00:15,130
for coming to my talk,
"From Zero to Hero--

3
00:00:15,130 --> 00:00:19,000
Best Practices for Setting
Up RStudio in the Cloud."

4
00:00:19,000 --> 00:00:23,020
So last year, I was given the
keys to an incredible treasure.

5
00:00:23,020 --> 00:00:26,140
And when I say keys, I
mean, literally keys.

6
00:00:26,140 --> 00:00:29,140
I was handed three product
keys so that my data science

7
00:00:29,140 --> 00:00:31,330
team at Spring
Health, where I work,

8
00:00:31,330 --> 00:00:35,440
could start using RStudio
Server Pro, RStudio Connect,

9
00:00:35,440 --> 00:00:37,870
and RStudio Package Manager.

10
00:00:37,870 --> 00:00:40,840
Now my name is Rika Gorn,
and I'm a data scientist.

11
00:00:40,840 --> 00:00:42,920
I'm not an engineer.

12
00:00:42,920 --> 00:00:44,800
I work at an
incredible organization

13
00:00:44,800 --> 00:00:46,270
called Spring Health.

14
00:00:46,270 --> 00:00:48,070
We're a mental health
care tech startup

15
00:00:48,070 --> 00:00:50,740
that provides a comprehensive
mental health care

16
00:00:50,740 --> 00:00:54,160
solution to employers
all over the world.

17
00:00:54,160 --> 00:00:58,120
Over the last year, we've been
growing and scaling a ton.

18
00:00:58,120 --> 00:01:00,460
Sidenote, we are hiring.

19
00:01:00,460 --> 00:01:04,959
And RStudio Team would be a huge
win for a very quickly growing

20
00:01:04,959 --> 00:01:06,790
data science team.

21
00:01:06,790 --> 00:01:09,070
So what does this mean
for me and my team?

22
00:01:09,070 --> 00:01:11,740
Well, RStuido Server
Pro would allow

23
00:01:11,740 --> 00:01:14,800
us to run R in a secure
remote environment,

24
00:01:14,800 --> 00:01:17,170
and we wouldn't have to
rely on our local computer

25
00:01:17,170 --> 00:01:20,200
for computationally
expensive jobs.

26
00:01:20,200 --> 00:01:23,470
RStudio Connect would allow
us to publish all of our data

27
00:01:23,470 --> 00:01:25,720
products, including Shiny apps.

28
00:01:25,720 --> 00:01:30,340
R Markdown, dashboards, plumber
APIs, and quickly source them

29
00:01:30,340 --> 00:01:31,930
to other departments.

30
00:01:31,930 --> 00:01:36,190
And Package Manager would allow
us to centralize and manage

31
00:01:36,190 --> 00:01:39,730
how our team uses internal
and external packages.

32
00:01:39,730 --> 00:01:43,360
So needless to say, this is
an incredible win for my team,

33
00:01:43,360 --> 00:01:45,850
and we were super
excited to get started.

34
00:01:45,850 --> 00:01:48,400
But because of how
quickly everything

35
00:01:48,400 --> 00:01:50,680
was moving, while I
was given the support

36
00:01:50,680 --> 00:01:53,320
of a fantastic
engineer, the bulk

37
00:01:53,320 --> 00:01:58,450
of setting up and configuring
RStudio Team would fall on me.

38
00:01:58,450 --> 00:02:02,470
Now I'm very comfortable
coding in an R IDE

39
00:02:02,470 --> 00:02:04,390
or working with R
Markdown documents,

40
00:02:04,390 --> 00:02:07,750
but I didn't know anything
about servers or setting up

41
00:02:07,750 --> 00:02:09,272
an infrastructure in the Cloud.

42
00:02:09,272 --> 00:02:11,230
But I was pretty sure
that you couldn't code up

43
00:02:11,230 --> 00:02:13,490
a server in an R
Markdown document.

44
00:02:13,490 --> 00:02:16,100
So what did I do?

45
00:02:16,100 --> 00:02:19,030
Well, of course, first
I went to Google.

46
00:02:19,030 --> 00:02:22,150
Now RStudio has a ton of
great guides for administering

47
00:02:22,150 --> 00:02:23,200
their products.

48
00:02:23,200 --> 00:02:26,530
But since these are geared
for engineering or sysadmins,

49
00:02:26,530 --> 00:02:29,650
I didn't even know where to put
all the code the guides were

50
00:02:29,650 --> 00:02:31,310
talking about.

51
00:02:31,310 --> 00:02:33,430
And so this was the
beginning of my journey

52
00:02:33,430 --> 00:02:35,860
into the world of
data engineering.

53
00:02:35,860 --> 00:02:37,720
As I started
learning, I realized

54
00:02:37,720 --> 00:02:41,050
that there was a huge
disconnect between resources

55
00:02:41,050 --> 00:02:45,610
available for engineers and
resources for data scientists

56
00:02:45,610 --> 00:02:47,440
to learn engineering tasks.

57
00:02:47,440 --> 00:02:49,540
I also learned that data
scientists, especially

58
00:02:49,540 --> 00:02:53,500
in smaller organizations or
startups where engineering

59
00:02:53,500 --> 00:02:56,710
support can be scarce,
desperately need access

60
00:02:56,710 --> 00:02:59,050
to engineering
skills and resources

61
00:02:59,050 --> 00:03:03,710
if they want to learn to quickly
deploy their own data products.

62
00:03:03,710 --> 00:03:06,280
So, today what I
want to do is I want

63
00:03:06,280 --> 00:03:08,800
to share with you my
own roadmap for how

64
00:03:08,800 --> 00:03:11,770
to start the process of
learning data engineering.

65
00:03:11,770 --> 00:03:14,620
So if you're looking
to set up RStudio Team,

66
00:03:14,620 --> 00:03:17,120
then this talk should
be very helpful for you.

67
00:03:17,120 --> 00:03:20,260
But even if your first
engineering product

68
00:03:20,260 --> 00:03:23,440
includes a different server
setup, then most of this talk

69
00:03:23,440 --> 00:03:26,360
should also apply
to you as well.

70
00:03:26,360 --> 00:03:29,680
So my roadmap is framed
around three different parts.

71
00:03:29,680 --> 00:03:30,680
People.

72
00:03:30,680 --> 00:03:32,560
so how you can use
people around you

73
00:03:32,560 --> 00:03:34,450
and your organization
to help you

74
00:03:34,450 --> 00:03:36,850
set up your first
engineering project.

75
00:03:36,850 --> 00:03:37,750
Learning.

76
00:03:37,750 --> 00:03:39,250
So the most important
things for you

77
00:03:39,250 --> 00:03:41,620
to learn as a data
scientist as you

78
00:03:41,620 --> 00:03:45,610
go on your data engineering
journey and implementation.

79
00:03:45,610 --> 00:03:48,460
What to do when you're
actually in the thick of things

80
00:03:48,460 --> 00:03:51,840
in the weeds of your project.

81
00:03:51,840 --> 00:03:52,800
OK.

82
00:03:52,800 --> 00:03:57,420
So you're about to start your
first data engineering project.

83
00:03:57,420 --> 00:03:59,310
What now?

84
00:03:59,310 --> 00:04:02,340
So even if you're going
at this alone or as part

85
00:04:02,340 --> 00:04:04,710
of a small group,
it's super helpful

86
00:04:04,710 --> 00:04:06,990
to have an engineer
in your corner.

87
00:04:06,990 --> 00:04:10,080
It's important to understand
that your relationship

88
00:04:10,080 --> 00:04:11,530
shouldn't be combative.

89
00:04:11,530 --> 00:04:13,740
I think as a data
scientist, very often,

90
00:04:13,740 --> 00:04:19,230
you want all the data
possible at your fingertips.

91
00:04:19,230 --> 00:04:21,360
Whereas engineers,
a lot of times,

92
00:04:21,360 --> 00:04:24,870
they have particular
security concerns

93
00:04:24,870 --> 00:04:27,270
or don't give you the
data that you need

94
00:04:27,270 --> 00:04:29,140
as quickly as you may want it.

95
00:04:29,140 --> 00:04:31,440
So it's important to
start a good relationship

96
00:04:31,440 --> 00:04:34,830
with your engineer and to learn
from them what their security

97
00:04:34,830 --> 00:04:39,510
concerns may be for your
server, and to understand where

98
00:04:39,510 --> 00:04:41,440
their concerns are coming from.

99
00:04:41,440 --> 00:04:44,160
It's also important
before you start

100
00:04:44,160 --> 00:04:46,230
your project to
really understand

101
00:04:46,230 --> 00:04:47,430
the value of your project.

102
00:04:47,430 --> 00:04:48,930
Why are you doing this?

103
00:04:48,930 --> 00:04:49,980
Who will benefit?

104
00:04:49,980 --> 00:04:53,298
Who will use this new
server, this new product?

105
00:04:53,298 --> 00:04:54,840
Are there people in
your organization

106
00:04:54,840 --> 00:04:59,160
that you need to train or
to bring on into your side?

107
00:04:59,160 --> 00:05:02,043
It's important to make sure that
there is kind of a pot of gold

108
00:05:02,043 --> 00:05:03,960
at the end of your rainbow
because what you're

109
00:05:03,960 --> 00:05:07,740
going to be doing is taking
time away from your regular data

110
00:05:07,740 --> 00:05:12,510
science tasks and focusing
on a new skill set

111
00:05:12,510 --> 00:05:13,470
on data engineering.

112
00:05:13,470 --> 00:05:16,470
So it's important
that before you start,

113
00:05:16,470 --> 00:05:19,890
the work that you're doing is
going to very clearly bring

114
00:05:19,890 --> 00:05:23,650
value to you and to your team.

115
00:05:23,650 --> 00:05:26,430
So technology and
learning, specifically

116
00:05:26,430 --> 00:05:28,680
for engineering projects.

117
00:05:28,680 --> 00:05:31,650
My biggest weakness when
I started in the beginning

118
00:05:31,650 --> 00:05:34,110
was that I wasn't
comfortable using Bash.

119
00:05:34,110 --> 00:05:39,420
For me, it was kind of scary,
black, blinking command line.

120
00:05:39,420 --> 00:05:42,060
And I found a lot of
it very unintuitive.

121
00:05:42,060 --> 00:05:44,580
There was one letter
commands and arguments

122
00:05:44,580 --> 00:05:47,940
that were unintuitive
as compared to R.

123
00:05:47,940 --> 00:05:51,060
So here we have on the
left hand side some R code.

124
00:05:51,060 --> 00:05:54,390
And you can see, it reads very
easily, almost like a sentence.

125
00:05:54,390 --> 00:05:56,790
You can see what's being
grouped, what's being counted.

126
00:05:56,790 --> 00:05:59,430
Whereas the Bash on
the right hand side

127
00:05:59,430 --> 00:06:00,750
can be kind of confusing.

128
00:06:00,750 --> 00:06:04,212
There's one letter commands,
it's unclear what's happening.

129
00:06:04,212 --> 00:06:05,670
So it's important
to start learning

130
00:06:05,670 --> 00:06:06,670
a little bit about this.

131
00:06:06,670 --> 00:06:09,120
You don't have to learn
everything, but start.

132
00:06:09,120 --> 00:06:12,330
Learn how to move around
and your directories,

133
00:06:12,330 --> 00:06:14,610
learn how to copy
and paste files,

134
00:06:14,610 --> 00:06:17,310
learn how to log into your
server using something

135
00:06:17,310 --> 00:06:19,350
called SSH protocols.

136
00:06:19,350 --> 00:06:21,150
And make sure that you
actually have access

137
00:06:21,150 --> 00:06:22,680
to the correct files.

138
00:06:22,680 --> 00:06:25,470
And if you don't, learn
how to change the access

139
00:06:25,470 --> 00:06:26,820
for your files using Bash.

140
00:06:30,180 --> 00:06:34,170
Another piece of learning
that's important, take out--

141
00:06:34,170 --> 00:06:38,590
it's important to draw out your
actual server architecture.

142
00:06:38,590 --> 00:06:40,590
And what I mean when I
say draw it out, I mean,

143
00:06:40,590 --> 00:06:44,260
actually take out a piece
of paper and draw it out.

144
00:06:44,260 --> 00:06:47,610
It can even help to look at
AWS architecture diagrams

145
00:06:47,610 --> 00:06:50,845
on the internet and try to
decipher what they mean.

146
00:06:50,845 --> 00:06:54,060
AWS has a million
and a half services.

147
00:06:54,060 --> 00:06:56,820
And as a data scientist
entering that world, a lot of it

148
00:06:56,820 --> 00:06:59,250
can be super daunting
to understand.

149
00:06:59,250 --> 00:07:01,710
And so understanding what
all the various terms,

150
00:07:01,710 --> 00:07:05,410
all the different softwares and
products can be really helpful.

151
00:07:05,410 --> 00:07:07,950
And that's why drawing out
your diagram, even if it's

152
00:07:07,950 --> 00:07:11,520
super simple, can be helpful
in organizing your work

153
00:07:11,520 --> 00:07:13,080
before you start.

154
00:07:13,080 --> 00:07:15,840
Also, sharing that
diagram with your engineer

155
00:07:15,840 --> 00:07:20,550
can also help you prevent
making errors in your system

156
00:07:20,550 --> 00:07:23,050
before you even start.

157
00:07:23,050 --> 00:07:27,210
So here's an example of a
simplified AWS architecture

158
00:07:27,210 --> 00:07:28,290
diagram.

159
00:07:28,290 --> 00:07:30,150
When you first start
drawing it out,

160
00:07:30,150 --> 00:07:33,090
it's important to think about
which parts can actually

161
00:07:33,090 --> 00:07:34,350
talk to each other?

162
00:07:34,350 --> 00:07:35,460
What is public?

163
00:07:35,460 --> 00:07:36,870
What is private?

164
00:07:36,870 --> 00:07:39,750
And which parts of the
server point to what

165
00:07:39,750 --> 00:07:41,920
other parts of the server?

166
00:07:41,920 --> 00:07:45,720
So here, we have the VPC or
the virtual private cloud.

167
00:07:45,720 --> 00:07:49,320
This is your virtual server
and it's hosted in AWS.

168
00:07:49,320 --> 00:07:52,860
But you can also host
servers on Azure or Actable

169
00:07:52,860 --> 00:07:55,510
or other managed services.

170
00:07:55,510 --> 00:07:59,370
Here is where we have the meat
of what makes RStudio Team

171
00:07:59,370 --> 00:08:00,750
RStudio Team.

172
00:08:00,750 --> 00:08:05,400
We have three EC2 instances
or three smaller servers

173
00:08:05,400 --> 00:08:09,870
that have all the data that make
up RStudio Server Pro, Connect,

174
00:08:09,870 --> 00:08:11,190
and Package Manager.

175
00:08:11,190 --> 00:08:14,590
So these EC2 instances
live in a private subnet,

176
00:08:14,590 --> 00:08:16,770
which create a layer
of added security

177
00:08:16,770 --> 00:08:21,180
so that random people can't
just access your server.

178
00:08:21,180 --> 00:08:24,340
So here we have a bunch of
extra layers of security.

179
00:08:24,340 --> 00:08:27,680
We have a load balancer, which
helps root the correct requests

180
00:08:27,680 --> 00:08:29,010
to your servers.

181
00:08:29,010 --> 00:08:31,130
We also have a
bastion or jump box,

182
00:08:31,130 --> 00:08:33,409
which adds yet
another security layer

183
00:08:33,409 --> 00:08:36,549
so that you don't jump directly
into the RStudio Server.

184
00:08:36,549 --> 00:08:39,169
You have to go through an
added jump box in order

185
00:08:39,169 --> 00:08:40,850
to get into your server.

186
00:08:40,850 --> 00:08:43,340
Now once again, this
is a simplified model,

187
00:08:43,340 --> 00:08:46,520
but it starts to show
you what AWS products

188
00:08:46,520 --> 00:08:50,150
you, as the data engineer,
have to start setting up

189
00:08:50,150 --> 00:08:52,990
in the cloud.

190
00:08:52,990 --> 00:08:57,160
Now one last piece is another
important learning topic

191
00:08:57,160 --> 00:09:00,340
that's critical before
you start your project.

192
00:09:00,340 --> 00:09:03,440
And this is learning a little
bit about ports and security.

193
00:09:03,440 --> 00:09:06,100
So this is a huge
topic, but it's

194
00:09:06,100 --> 00:09:08,740
helpful to know just
a little bit about how

195
00:09:08,740 --> 00:09:12,610
computers network and a little
bit about security management

196
00:09:12,610 --> 00:09:16,490
and the most common internet
protocols that are used.

197
00:09:16,490 --> 00:09:18,820
This is one of those
topics that engineers

198
00:09:18,820 --> 00:09:20,387
seem to know a lot about.

199
00:09:20,387 --> 00:09:21,970
But when I was
learning, I found there

200
00:09:21,970 --> 00:09:24,670
weren't that many resources
available specifically

201
00:09:24,670 --> 00:09:26,270
for data scientists.

202
00:09:26,270 --> 00:09:29,830
So ports are
communication endpoints

203
00:09:29,830 --> 00:09:31,960
that allow computers
to talk to each other

204
00:09:31,960 --> 00:09:33,790
in various secure ways.

205
00:09:33,790 --> 00:09:38,530
We have port 22, 25, 80, 443.

206
00:09:38,530 --> 00:09:42,230
These are things like
HTTP, HTTPS, things

207
00:09:42,230 --> 00:09:43,480
that you may have heard about.

208
00:09:43,480 --> 00:09:46,270
But it's important to learn just
a little bit about what ports

209
00:09:46,270 --> 00:09:47,770
are available,
which ones you can

210
00:09:47,770 --> 00:09:50,950
turn on and off in your server.

211
00:09:50,950 --> 00:09:54,150
SSL and TLS protocols
are protocols

212
00:09:54,150 --> 00:09:56,800
that make secure
internet communication

213
00:09:56,800 --> 00:10:00,430
possible by encrypting
internet traffic.

214
00:10:00,430 --> 00:10:02,410
I like to think of
this as a handshake

215
00:10:02,410 --> 00:10:04,990
between different computers.

216
00:10:04,990 --> 00:10:06,820
Setting up these
protocols requires

217
00:10:06,820 --> 00:10:09,520
learning a little bit about
different certificates

218
00:10:09,520 --> 00:10:10,930
and configurations.

219
00:10:10,930 --> 00:10:13,300
So it's important to
learn what protocol

220
00:10:13,300 --> 00:10:17,800
you're going to be using
when setting up your project.

221
00:10:17,800 --> 00:10:18,880
OK.

222
00:10:18,880 --> 00:10:21,310
So you've done your
learning, and now it's

223
00:10:21,310 --> 00:10:22,960
time for implementation.

224
00:10:22,960 --> 00:10:26,410
My main piece of advice
is to get started.

225
00:10:26,410 --> 00:10:28,300
Obviously, do your
research, but don't

226
00:10:28,300 --> 00:10:31,240
fall into the trap of
analysis paralysis.

227
00:10:31,240 --> 00:10:32,740
I think for me, as
a data scientist,

228
00:10:32,740 --> 00:10:34,690
I kind of want to know
everything available

229
00:10:34,690 --> 00:10:36,080
before I started.

230
00:10:36,080 --> 00:10:39,130
But what happened is that
I did two weeks of research

231
00:10:39,130 --> 00:10:41,320
and then realized I had
nothing to show for it

232
00:10:41,320 --> 00:10:43,810
other than
theoretical knowledge.

233
00:10:43,810 --> 00:10:48,760
So it's helpful here to take
a lesson from your engineering

234
00:10:48,760 --> 00:10:51,850
teams and use a
more agile approach.

235
00:10:51,850 --> 00:10:54,760
Where you get started
quickly you may fail quickly,

236
00:10:54,760 --> 00:10:58,500
but then you can get started
again just as quickly.

237
00:10:58,500 --> 00:10:59,040
All right.

238
00:10:59,040 --> 00:11:00,840
So you've officially
started your project,

239
00:11:00,840 --> 00:11:03,180
what do you do now?

240
00:11:03,180 --> 00:11:07,950
So use your engineer as a guide
and to check in on your work.

241
00:11:07,950 --> 00:11:10,950
They can tell you when you've
done something horribly wrong.

242
00:11:10,950 --> 00:11:14,100
Like when I accidentally
opened all of my instances

243
00:11:14,100 --> 00:11:15,670
to the entire world.

244
00:11:15,670 --> 00:11:17,850
And they can also help
you to finish tasks

245
00:11:17,850 --> 00:11:20,520
that you may not have
the appropriate security

246
00:11:20,520 --> 00:11:21,540
clearances for.

247
00:11:21,540 --> 00:11:24,270
So for example, if you
want to point your server

248
00:11:24,270 --> 00:11:27,690
at a particular domain name,
they can help you to do that,

249
00:11:27,690 --> 00:11:32,400
and they could also help you to
estimate costs for your server.

250
00:11:32,400 --> 00:11:33,030
Learning.

251
00:11:33,030 --> 00:11:36,540
So it's important to start
looking at the new data formats

252
00:11:36,540 --> 00:11:39,390
and files that you're going
to be using in your server.

253
00:11:39,390 --> 00:11:41,910
So to set up RStudio
Team specifically,

254
00:11:41,910 --> 00:11:45,870
RStudio uses something called
the cloud formation template

255
00:11:45,870 --> 00:11:47,970
to set up push-button
deployment.

256
00:11:47,970 --> 00:11:49,480
Now when I started
looking at this,

257
00:11:49,480 --> 00:11:51,210
I was very excited
because it looked

258
00:11:51,210 --> 00:11:55,080
like something very similar
to something in the R world.

259
00:11:55,080 --> 00:11:58,560
And that is that it looked
basically like a YAML file.

260
00:11:58,560 --> 00:12:00,540
So it's important to
get to know these files.

261
00:12:00,540 --> 00:12:03,720
Don't just deploy them, look
at them, read through them,

262
00:12:03,720 --> 00:12:05,340
understand their defaults.

263
00:12:05,340 --> 00:12:07,830
So when I started, I did
not look at the defaults

264
00:12:07,830 --> 00:12:09,450
of my cloud formation file.

265
00:12:09,450 --> 00:12:11,790
And then I had to
destroy my entire stack

266
00:12:11,790 --> 00:12:14,460
and start from scratch
because I didn't change

267
00:12:14,460 --> 00:12:17,460
a really important default.
So get to know your files,

268
00:12:17,460 --> 00:12:20,100
get to know your file
formats, read through them,

269
00:12:20,100 --> 00:12:22,860
understand their defaults.

270
00:12:22,860 --> 00:12:24,330
So implementation.

271
00:12:24,330 --> 00:12:26,770
You are going to
be making mistakes.

272
00:12:26,770 --> 00:12:30,540
So make sure that you set
up guardrails and fail safes

273
00:12:30,540 --> 00:12:33,780
for those potential mistakes.

274
00:12:33,780 --> 00:12:36,640
First, take screenshots
of your instances.

275
00:12:36,640 --> 00:12:39,210
This is something
that you can do in AWS

276
00:12:39,210 --> 00:12:40,500
when you set up your server.

277
00:12:40,500 --> 00:12:42,360
After you configure
server, you're

278
00:12:42,360 --> 00:12:44,830
actually able to take
a screenshot of it.

279
00:12:44,830 --> 00:12:47,410
So if you ever mess anything
up and you need to go back,

280
00:12:47,410 --> 00:12:50,130
you don't have to start
over from scratch.

281
00:12:50,130 --> 00:12:52,230
As you're going to be
setting up your server,

282
00:12:52,230 --> 00:12:57,630
there's going to be lots of
passwords, PEM keys, .pk keys,

283
00:12:57,630 --> 00:12:58,650
certificates.

284
00:12:58,650 --> 00:13:01,350
Save all of these
in a secure way.

285
00:13:01,350 --> 00:13:04,110
For example, saving them
in something like OnePass,

286
00:13:04,110 --> 00:13:07,470
don't just save them
on your local computer.

287
00:13:07,470 --> 00:13:11,430
And lastly, write
good documentation.

288
00:13:11,430 --> 00:13:13,260
Write good documentation
that an engineer

289
00:13:13,260 --> 00:13:16,203
can follow, that another
data scientist can follow.

290
00:13:16,203 --> 00:13:18,120
Because at the moment,
while you're the admin,

291
00:13:18,120 --> 00:13:20,620
you may not always be the
admin for this project.

292
00:13:20,620 --> 00:13:24,630
So it's important to write good
documentation as you go along.

293
00:13:24,630 --> 00:13:25,470
All right.

294
00:13:25,470 --> 00:13:29,370
So your server is set up,
whether it's for RStudio Team

295
00:13:29,370 --> 00:13:30,840
or for another project.

296
00:13:30,840 --> 00:13:33,750
Now it's time for
the fun part, which

297
00:13:33,750 --> 00:13:38,070
is to configure all of
your settings and defaults.

298
00:13:38,070 --> 00:13:41,460
So when you're configuring
and after you've

299
00:13:41,460 --> 00:13:43,920
set up the main
parts of your server,

300
00:13:43,920 --> 00:13:46,770
you need to get buy-in from the
data scientists on your team

301
00:13:46,770 --> 00:13:48,853
because they're going to
be the ones who are going

302
00:13:48,853 --> 00:13:50,177
to be testing your deployment.

303
00:13:50,177 --> 00:13:52,260
So it's helpful-- it was
helpful for me, at least,

304
00:13:52,260 --> 00:13:55,140
to have a testing
log to write down

305
00:13:55,140 --> 00:13:57,900
what deployment's are working,
which ones are failing.

306
00:13:57,900 --> 00:14:00,630
And this is helpful for
later when I was actually

307
00:14:00,630 --> 00:14:03,270
writing my documentation.

308
00:14:03,270 --> 00:14:04,890
Understand who's
going to need to be

309
00:14:04,890 --> 00:14:07,950
trained in the company
alongside your data scientists.

310
00:14:07,950 --> 00:14:10,690
Don't bring everyone in
until you've figured out

311
00:14:10,690 --> 00:14:11,580
most of the bugs.

312
00:14:11,580 --> 00:14:13,770
You don't want to be doing
demos for your product

313
00:14:13,770 --> 00:14:15,220
when there's still bugs in it.

314
00:14:15,220 --> 00:14:19,320
So take time to set up
training and set up testing way

315
00:14:19,320 --> 00:14:21,690
before you're going
to be introducing it

316
00:14:21,690 --> 00:14:23,970
to folks at your company.

317
00:14:23,970 --> 00:14:26,970
You don't want to discourage
your users and the consumers

318
00:14:26,970 --> 00:14:31,260
of your product before they
can get started and get really

319
00:14:31,260 --> 00:14:33,270
excited for your new project.

320
00:14:33,270 --> 00:14:35,615
Set up time for
training and make sure

321
00:14:35,615 --> 00:14:36,990
that there's a
little bit of time

322
00:14:36,990 --> 00:14:39,810
before you actually
start demoing.

323
00:14:39,810 --> 00:14:40,360
All right.

324
00:14:40,360 --> 00:14:41,970
So once you've set
up your server,

325
00:14:41,970 --> 00:14:46,740
you're now officially the
root user with sudo access.

326
00:14:46,740 --> 00:14:50,340
It's important that you use
this power for good and not

327
00:14:50,340 --> 00:14:51,450
for evil.

328
00:14:51,450 --> 00:14:54,300
So learn about different
types of authorizations,

329
00:14:54,300 --> 00:14:58,800
about Google OAuth, multifactor
authentication, API keys,

330
00:14:58,800 --> 00:15:00,562
basic authorization.

331
00:15:00,562 --> 00:15:02,520
As you're going to be
configuring your product,

332
00:15:02,520 --> 00:15:04,890
you're going to need to be
giving folks in your company

333
00:15:04,890 --> 00:15:06,100
access to it.

334
00:15:06,100 --> 00:15:07,920
And this has to be done
in a secure manner.

335
00:15:07,920 --> 00:15:10,150
Your engineer can
definitely help you here.

336
00:15:10,150 --> 00:15:12,420
But knowing a little bit
about the differences

337
00:15:12,420 --> 00:15:14,730
for different
authorization protocols

338
00:15:14,730 --> 00:15:16,500
can be super duper helpful.

339
00:15:16,500 --> 00:15:18,720
And once again, you may
be the root user now,

340
00:15:18,720 --> 00:15:22,210
but you may not
be the root user later.

341
00:15:22,210 --> 00:15:24,080
Implementation.

342
00:15:24,080 --> 00:15:26,260
This is the fun part
for me especially.

343
00:15:26,260 --> 00:15:29,350
Get inside your server
and play around.

344
00:15:29,350 --> 00:15:31,700
Look at the important main file.

345
00:15:31,700 --> 00:15:36,160
So for RStudio Pro, RStudio
Connect, and Package Manager,

346
00:15:36,160 --> 00:15:38,620
I found that these
five files were

347
00:15:38,620 --> 00:15:41,830
super duper important in
making sure that deployment

348
00:15:41,830 --> 00:15:43,720
was actually working.

349
00:15:43,720 --> 00:15:46,330
So when I first started, I had
a lot of deployment errors.

350
00:15:46,330 --> 00:15:48,160
And that's because
I realized that I

351
00:15:48,160 --> 00:15:51,970
hadn't changed some of the
defaults in these five files.

352
00:15:51,970 --> 00:15:55,120
So get it into your
server, understand

353
00:15:55,120 --> 00:15:56,740
what the paths are
like, understand

354
00:15:56,740 --> 00:15:58,810
what the important
files are, understand

355
00:15:58,810 --> 00:16:01,960
what their defaults are and
how they should be changed,

356
00:16:01,960 --> 00:16:06,130
and if and when they
should be changed.

357
00:16:06,130 --> 00:16:07,000
All right.

358
00:16:07,000 --> 00:16:10,270
So this is my entire system for
setting up a data engineering

359
00:16:10,270 --> 00:16:12,520
project as a data scientist.

360
00:16:12,520 --> 00:16:15,160
So before you start,
partner with an engineer

361
00:16:15,160 --> 00:16:17,320
and understand their
security concerns,

362
00:16:17,320 --> 00:16:20,470
as well as the larger value
that your project brings

363
00:16:20,470 --> 00:16:22,180
to the entire team.

364
00:16:22,180 --> 00:16:24,700
Learn a little bit
about Bash, about ports,

365
00:16:24,700 --> 00:16:27,310
and network administration,
and draw out

366
00:16:27,310 --> 00:16:30,802
your AWS infrastructure
diagram on a piece of paper.

367
00:16:30,802 --> 00:16:32,260
And when you're
ready to implement,

368
00:16:32,260 --> 00:16:34,630
get started as soon as you can.

369
00:16:34,630 --> 00:16:38,020
Throughout your project, use
your engineer as a guide.

370
00:16:38,020 --> 00:16:40,000
Get comfortable with
different data formats

371
00:16:40,000 --> 00:16:43,300
and set up guardrails
in case of failure.

372
00:16:43,300 --> 00:16:46,180
Once you've set up your
project, take the time

373
00:16:46,180 --> 00:16:49,210
to train your team
to test your project

374
00:16:49,210 --> 00:16:51,610
and test out any
other little bugs

375
00:16:51,610 --> 00:16:53,110
and issues that may come up.

376
00:16:53,110 --> 00:16:56,890
Learn a little bit about user
authorization and root access.

377
00:16:56,890 --> 00:16:59,230
And then most importantly,
get inside your server,

378
00:16:59,230 --> 00:17:03,560
play around, and start changing
your defaults to your needs.

379
00:17:03,560 --> 00:17:07,000
And finally,
remember to have fun.

380
00:17:07,000 --> 00:17:10,369
Thank you so much for taking
the time to listen to this talk.

381
00:17:10,369 --> 00:17:12,119
I look forward to
answering your questions

382
00:17:12,119 --> 00:17:14,710
and connecting over the
rest of this conference.

383
00:17:14,710 --> 00:17:16,859
Thank you so much to
everyone at RStudio

384
00:17:16,859 --> 00:17:20,570
and everyone at Spring Health
who helped me with this talk.
